{"version":3,"sources":["node_modules/browser-pack/_prelude.js","primo-explore/custom/32KUL_KUL-REGIONAL/js/components.js","primo-explore/custom/32KUL_KUL-REGIONAL/js/components/prmAlmaOtherMembersAfter/regViewOtherMembers.js","primo-explore/custom/32KUL_KUL-REGIONAL/js/components/prmSearchResultAvailabilityLineAfter/regViewAvailabilityLineConfig.js","primo-explore/custom/32KUL_KUL-REGIONAL/js/main.js","primo-explore/custom/32KUL_KUL-REGIONAL/js/primo-explore-dom/js/primo.js","primo-explore/custom/32KUL_KUL-REGIONAL/js/primo-explore-dom/js/primo/explore.js","primo-explore/custom/32KUL_KUL-REGIONAL/js/primo-explore-dom/js/primo/explore/components.js","primo-explore/custom/32KUL_KUL-REGIONAL/js/primo-explore-dom/js/primo/explore/helper.js","primo-explore/custom/32KUL_KUL-REGIONAL/js/primo-explore-dom/js/primo/facets.js","primo-explore/custom/32KUL_KUL-REGIONAL/js/primo-explore-dom/js/primo/records.js","primo-explore/custom/32KUL_KUL-REGIONAL/js/primo-explore-dom/js/primo/user.js","primo-explore/custom/32KUL_KUL-REGIONAL/js/primo-explore-dom/js/primo/view.js","primo-explore/custom/32KUL_KUL-REGIONAL/js/primo-explore-dom/js/vendor/css-selector-generator.js","primo-explore/custom/32KUL_KUL-REGIONAL/js/templates.js","primo-explore/custom/32KUL_KUL-REGIONAL/js/utils.js"],"names":[],"mappings":"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","file":"custom.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*\r\n  Declare your components here.\r\n\r\n  Rewrite this when imports can be done dynamically\r\n  http://2ality.com/2017/01/import-operator.html\r\n\r\n  KULeuven/LIBIS (c) 2017\r\n  Mehmet Celik\r\n*/\r\nimport './utils';\r\n/* import your component configuration*/\r\nimport {regViewOtherMembersConfig} from './components/prmAlmaOtherMembersAfter/regViewOtherMembers'\r\nimport {regViewAvailabilityLineConfig} from './components/prmSearchResultAvailabilityLineAfter/regViewAvailabilityLineConfig'\r\n\r\n\r\nexport default class AfterComponents {\r\n\r\n  static get all() {\r\n    /*\r\n      name = the sub element in the after element\r\n      config = the imported configuration object\r\n      enabled = true/false should the component be created\r\n      appendTo = The component should be created in this after component.\r\n\r\n      ex. {name: 'home-icon', config: homeIconConfig, enabled: true, appendTo: 'prm-logo-after'}\r\n      results in:\r\n        <prm-logo-after parentCtrl='$ctrl'>\r\n          <home-icon parentCtrl='$ctrl'></home-icon>\r\n        </prm-logo-after>\r\n    */\r\n    return [\r\n      /*\r\n      {name: 'libis-experiment', config: experimentConfig, enabled: false, appendTo: 'prm-messages-and-blocks-overview-after', enableInView: '.*'},\r\n      {name: 'libis-remove-user-area', config: removeUserAreaConfig, enabled: false, appendTo: 'prm-user-area-expandable-after', enableInView: '.*'},      \r\n      */\r\n      {name: 'libis-only-members', config: regViewOtherMembersConfig, enabled: true, appendTo: 'prm-alma-other-members-after', enableInView: '.*'},\r\n      {name: 'libis-availability-line', config: regViewAvailabilityLineConfig, enabled: true, appendTo: 'prm-search-result-availability-line-after', enableInView: '.*'},\r\n\r\n    ].filter( (component) => ( component.enabled && new RegExp(component.enableInView).test(window.appConfig.vid) ) );\r\n  }\r\n}\r\n","class regViewOtherMembersController {\r\n  constructor($scope, $element, $compile, $http, $rootScope) {\r\n    let self = this;\r\n    self.$scope = $scope;\r\n    self.$rootScope = $rootScope;\r\n    self.$element = $element;\r\n/*\r\n    console.log(  $rootScope )\r\n    console.log( self )\r\n    console.log(  self.parentCtrl.parentCtrl )\r\n*/\r\n    let itemDelivery = self.parentCtrl.parentCtrl.$scope.$parent.$parent.$parent.$ctrl.item.delivery;\r\n\r\n/*\r\nAlleen in eigen instelling\r\nhttp://localhost:8003/discovery/fulldisplay?docid=alma9925641190101488&context=L&vid=32KUL_KUL:LIBISNET2_UNION&lang=en&search_scope=DN_and_CI_UCV&adaptor=Local%20Search%20Engine&isFrbr=true&tab=DiscoveryNetwork_UCV&query=any,contains,wood&sortby=date_d&facet=frbrgroupid,include,9009075752282052547&offset=0\r\nhttp://localhost:8003/discovery/fulldisplay?docid=alma9992429289701488&context=L&vid=32KUL_KUL:LIBISNET2_UNION&lang=en&search_scope=DN_and_CI_UCV&adaptor=Local%20Search%20Engine&tab=DiscoveryNetwork_UCV&query=any,contains,wood&offset=0\r\n====> Dan is er ook geen prm-alma-other-members-after element !!!\r\n====> Deze controler zal dan niet worden uitgevoerd.\r\n\r\n=> FRBR \r\nhttps://libis-network.primo.exlibrisgroup.com/primaws/rest/priv/nz/pnx/P/9930070000101471?record-institution=32KUL_KUL&lang=en\r\nhttp://localhost:8003/primaws/rest/priv/nz/pnx/P/9930070000101488?record-institution=32KUL_KUL&lang=en\r\n\r\n\r\n\r\n\r\nNiet in eigen instelling\r\nhttp://localhost:8003/discovery/search?query=any,contains,9992170794501502&tab=DiscoveryNetwork_UCV&search_scope=DN_and_CI_UCV&vid=32KUL_KUL:LIBISNET2_UNION\r\n\r\n*/\r\n\r\n    if ( itemDelivery.serviceMode.includes(\"ovp\") ){\r\n      self.removePrmOpac();\r\n      self.addInstToAlmaInstitutionsList();\r\n    }\r\n    // console.log ( self.parentCtrl.parentCtrl.almaInstitutionsList )\r\n    self.parentCtrl.parentCtrl.almaInstitutionsList.sort((a, b) => (a.instName > b.instName) ? 1 : -1);\r\n  }\r\n\r\n  addInstToAlmaInstitutionsList() {\r\n    this.parentCtrl.parentCtrl.almaInstitutionsList.push(\r\n      {\r\n        \"getitLink\": [\r\n            {\r\n                \"displayText\": null,\r\n                \"linkRecordId\": this.parentCtrl.parentCtrl.almaInstitutionsList[0].getitLink[0].linkRecordId\r\n            }\r\n        ],\r\n        \r\n        \"instCode\": window.appConfig[\"primo-view\"].institution[\"institution-code\"],\r\n        \"instName\":  window.appConfig[\"primo-view\"].institution[\"institution-name\"],\r\n        \"instId\": window.appConfig[\"primo-view\"].institution.id,\r\n        \"availabilityStatus\": \"available_in_institution\",\r\n      }\r\n    );\r\n  }\r\n\r\n  removePrmOpac(){\r\n    let unbindWatcher = this.$scope.$watch(() =>\r\n      this.$element.parent().parent().parent().find('prm-opac'),\r\n      (newVal, oldVal) => {\r\n        //console.log (this);\r\n        if (newVal) {\r\n          newVal.find('md-tabs').remove();\r\n          unbindWatcher();\r\n        }\r\n      }\r\n    );\r\n   \r\n/*\r\n    Promise.resolve( this.$scope.$parent.$parent.$parent.$parent.$parent.$ctrl.fullViewService.getServices( this.parentCtrl.item, this.parentCtrl.originator) ).then(\r\n      function(services) {\r\n        console.log (services)\r\n        // Add to services if not alread in the list\r\n        //if ( services.findIndex(service => service.scrollId === \"altmetrics\") < 0 ){\r\n          services.splice(services.length -2, 0, sectionData);\r\n        //}\r\n    })\r\n*/\r\n/*\r\n\r\n    var prmOpacElement = document.querySelectorAll('#getit_link1_0 > div > prm-full-view-service-container > div.section-body > div > prm-opac')\r\n    var prmOpacMdTabsElement = document.querySelectorAll('#getit_link1_0 > div > prm-full-view-service-container > div.section-body > div > prm-opac > md-tabs')\r\n    console.log (prmOpacElement)\r\n    console.log (prmOpacMdTabsElement)\r\n    if ( prmOpacElement ) {\r\n      console.log (\"remover prmOpacElement\")\r\n      prmOpacElement[0].style.backgroundColor = \"red\";\r\n    }\r\n*/\r\n\r\n  }\r\n}\r\n\r\nregViewOtherMembersController.$inject = ['$scope', '$element', '$compile', '$http', '$rootScope'];\r\n\r\nexport let regViewOtherMembersConfig = {\r\n  bindings: {parentCtrl: '<'},\r\n  controller: regViewOtherMembersController,\r\n  template: ''\r\n}\r\n","  \r\n\r\n\r\n  class regViewAvailabilityLineController {\r\n    constructor($scope,$element,$translate) {\r\n      let self = this;\r\n\r\n      self.almaInstitutionsFilterInstCodeList = [\"32KUL_HUB\",\"32KUL_KHM\",\"32KUL_KHK\",\"32KUL_KHL\",\"32KUL_KATHO\",\"32KUL_LUCAWENK\"]\r\n      \r\n      self.$scope = $scope;\r\n      self.$element = $element;\r\n      self.$translate = $translate;\r\n      self.$ctrl =self.parentCtrl.parentCtrl ;\r\n      self.viewInst = window.appConfig[\"primo-view\"].institution.description;\r\n\r\n      /*\r\n      console.log( self )\r\n      console.log ( self.$ctrl.result.delivery.almaInstitutionsList )\r\n      console.log ( self.$ctrl)\r\n      console.log ( \"displayedAvailability:\"+ self.$ctrl.displayedAvailability );\r\n      */\r\n      self.$ctrl.displayedAvailability.forEach(availability => {\r\n        /*\r\n        console.log ( \"ifShowAvailability(availability):\"+ self.$ctrl.ifShowAvailability(availability) );\r\n        console.log ( \"!$ctrl.isCollectionDiscoveryCollection:\"+ self.$ctrl.isCollectionDiscoveryCollection );\r\n        console.log ( \"$ctrl.showTimer:\"+ self.$ctrl.showTimer);\r\n        console.log ( \"$ctrl.handleDueDate(availability):\"+ self.$ctrl.handleDueDate(availability) );\r\n        console.log ( \"$ctrl.isPhysical():\"+ self.$ctrl.isPhysical());\r\n        console.log ( \"$translate.instant('delivery.code.available_in_library') :\"+ $translate.instant('delivery.code.'+ self.$ctrl.handleDueDate(availability) )  );\r\n        console.log (  $translate.instant('delivery.code.'+ self.$ctrl.handleDueDate(availability) )  );\r\n        */\r\n        // ng-if=\"::($ctrl.showDisplayOtherLocations() || $ctrl.showDisplayLocation()  || $ctrl.showOtherLibraries(availability)) && $ctrl.isPhysical($index)\"\r\n\r\n        var availabilityInstitutions = self.$ctrl.result.delivery.almaInstitutionsList.filter(inst => {\r\n            return (inst.availabilityStatus === \"available_in_institution\" &&  self.almaInstitutionsFilterInstCodeList.includes(inst.instCode))\r\n        })\r\n        //console.log ( availabilityInstitutions.map( inst => inst.instName ).join() );\r\n\r\n        var availabilityInstitutionsNames = availabilityInstitutions.map( inst => inst.instName )\r\n\r\n        if ( availabilityInstitutionsNames.length > 0){\r\n            if (self.$ctrl.result.delivery.availability[0]  === \"available_in_library\"){\r\n                // replace instname from availabilityText with list of instnames\r\n                availabilityInstitutionsNames.unshift( window.appConfig[\"primo-view\"].institution.description );\r\n                self.$ctrl.availabilityRegView = \r\n                    $translate.instant('delivery.code.'+ self.$ctrl.handleDueDate(availability) ).replace(\r\n                        window.appConfig[\"primo-view\"].institution.description , \r\n                        availabilityInstitutionsNames.slice(0, -1).join(', ') +' and '+ availabilityInstitutionsNames.slice(-1)\r\n                    );\r\n            }\r\n            // if (self.$ctrl.result.delivery.bestlocation === null) {\r\n            if (self.$ctrl.result.delivery.availability[0] === \"no_inventory\"){\r\n                //self.$ctrl.displayedAvailability = [\"available_in_library\"];\r\n                self.$ctrl.result.delivery.availability = [\"available_in_library\"];\r\n                if  (availabilityInstitutionsNames.length === 1) {\r\n                    self.$ctrl.availabilityRegView = \r\n                    $translate.instant('delivery.code.available_in_library').replace(\r\n                        window.appConfig[\"primo-view\"].institution.description , \r\n                        availabilityInstitutionsNames[0]\r\n                    );\r\n                }else{\r\n                    self.$ctrl.availabilityRegView = \r\n                    $translate.instant('delivery.code.available_in_library').replace(\r\n                        window.appConfig[\"primo-view\"].institution.description , \r\n                        availabilityInstitutionsNames.slice(0, -1).join(', ') +' and '+ availabilityInstitutionsNames.slice(-1)\r\n                    );\r\n                }\r\n            }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  regViewAvailabilityLineController.$inject = ['$scope','$element','$translate'];\r\n  \r\n  export let regViewAvailabilityLineConfig = {\r\n    bindings: {parentCtrl: '<'},\r\n    controller: regViewAvailabilityLineController,\r\n    template: ''\r\n  }\r\n  ","/*\r\n  Central Package Loader\r\n\r\n  Do NOT edit this file.\r\n  All components are declared in \"components.js\"\r\n\r\n  KULeuven/LIBIS (c) 2017\r\n  Mehmet Celik\r\n*/\r\nimport Primo from './primo-explore-dom/js/primo'\r\nimport Helper from './primo-explore-dom/js/primo/explore/helper'\r\nimport Components from './components'\r\nimport Templates from './templates'\r\n\r\n//make Primo public\r\nwindow.Primo = Primo;\r\n//load PrimoExplorer UI if angular.reloadWithDebugInfo() is ran\r\nwindow.setTimeout(function () {\r\n  if (Primo.isDebugEnabled()) {\r\n    let uiURL = 'https://cdn.rawgit.com/mehmetc/primo-explore-dom-ui/fc0868df/js/custom.js';\r\n    //let uiURL = 'http://127.0.0.1:8000/js/custom.js';\r\n\r\n    Helper.loadScript(uiURL).then(() => {\r\n      console.log('Injecting UI');\r\n      Primo.explore.ui.toggle();\r\n    });\r\n  }\r\n}, 2000);\r\n\r\nlet servicesHost = 'https://services.libis.be/';\r\n\r\n// let app = angular.module('viewCustom', ['ngMaterial', 'vcRecaptcha','googleAnalytics'])\r\nlet app = angular.module('viewCustom', ['ngMaterial', 'vcRecaptcha'])\r\n/*\r\n  .constant('feedbackServiceURL', servicesHost + 'feedback')\r\n  .constant('reportAProblemURL', servicesHost + 'report_a_problem')\r\n  .constant('requestACopyURL', servicesHost + 'request_a_copy')\r\n  .constant('requestACopyOfEsDocURL', servicesHost + 'illjwtform')\r\n  .config(($sceDelegateProvider) => {\r\n    $sceDelegateProvider.resourceUrlWhitelist([\r\n      '**'\r\n    ]);\r\n  })\r\n*/\r\n/*\r\napp.factory('regViewSearchHttpCallInterceptor', regViewSearchHttpCallInterceptor)  \r\n//intercept api calls for database search and change to KUL (only regional views)\r\nvar reg_views = [\"32KUL_HUB:LIBISNET2_UNION\"];\r\nif (reg_views.includes(window.appConfig.vid)) {\r\n  app.config(['$httpProvider', ($httpProvider) => { $httpProvider.interceptors.push('regViewSearchHttpCallInterceptor'); }]);\r\n}\r\n*/\r\n\r\n//Contains the after component selectors that will be injected\r\nlet afterComponents = {};\r\n\r\n//Create all components and determine in which after component these need to be\r\n//injected\r\nconsole.log('Loading viewCustom components');\r\nComponents.all.forEach((component) => {\r\n  console.log(component.name)\r\n  if (component.enabled) {\r\n    if (component.appendTo) {\r\n      let elements = afterComponents[component.appendTo] || [];\r\n      //elements.push(component.name);\r\n      elements.push({\r\n        'name': component.name,\r\n        'enableInView': component.enableInView\r\n      });\r\n      afterComponents[component.appendTo] = elements;\r\n\r\n    }\r\n    app.constant('afterComponents', afterComponents);\r\n    app.component(component.name.toCamelCase(), component.config);\r\n  }\r\n})\r\n;\r\n\r\nconsole.log('Replace Templates');\r\nTemplates.all.forEach((template) => {\r\n  console.log(template.id)\r\n  app.run(($templateCache) => {\r\n    $templateCache.put(template.id, template.template);\r\n  })\r\n})\r\n\r\n//Inject place holders into the after components\r\nObject.keys(afterComponents).forEach((component, i) => {\r\n  let subComponents = afterComponents[component];\r\n/*\r\n  console.log ( subComponents )\r\n  console.log ( subComponents.map(m => `<${m.name} parent-ctrl=\"$ctrl\"></${m.name}>`) )\r\n*/\r\n  app.component(component.toCamelCase(), {\r\n    bindings: {\r\n      parentCtrl: '<'\r\n    },\r\n    template: subComponents.map(m => `<${m.name} parent-ctrl=\"$ctrl\"></${m.name}>`).join(\"\")\r\n  });\r\n});\r\n\r\n","import Explore from './primo/explore'\r\nimport Records from './primo/records'\r\nimport Facets from './primo/facets'\r\nimport View from './primo/view'\r\nimport User from './primo/user'\r\nimport Helper from './primo/explore/helper'\r\n\r\n/**\r\n * Primo main entry class\r\n */\r\nexport default class Primo {\r\n  /**\r\n   * Return version information\r\n   * @return {string}\r\n   */\r\n  static get version() {\r\n    let _version = \"0.0.10\";\r\n    return `Library:${_version} - Primo:${window.appConfig['system-configuration'].Primo_Version_Number}:${window.appConfig['system-configuration'].Primo_HotFix_Number}`;\r\n  }\r\n\r\n  /**\r\n   * Check if angular.reloadWithDebugInfo() has ran\r\n   * @return {boolean}\r\n   */\r\n  static isDebugEnabled() {\r\n    return Helper.isDebugEnabled();\r\n  }\r\n\r\n  /**\r\n   * Did the script ran on a Primo site\r\n   * @return {boolean}\r\n   */\r\n  static isPrimoAvailable() {\r\n    return Helper.isPrimoAvailable();\r\n  }\r\n\r\n  /**\r\n   * This is a proxy class\r\n   * @return {Explore}\r\n   */\r\n  static get explore() {\r\n    return Explore;\r\n  }\r\n\r\n  /**\r\n   * Get a pointer to available records\r\n   * @return {Records}\r\n   */\r\n  static get records(){\r\n    return new Promise((resolve, reject) => {\r\n      resolve(new Records(this.explore.components));\r\n    })\r\n    //return new Records(this.explore.components);\r\n  }\r\n\r\n  /**\r\n   * Get a pointer to available facets\r\n   * @return {Facets}\r\n   */\r\n  static get facets(){\r\n    return new Promise((resolve, reject) => {\r\n      resolve(new Facets(this.explore.components));\r\n    })\r\n    //return new Facets(this.explore.components);\r\n  }\r\n\r\n  /**\r\n   * Get a pointer to view related metadata\r\n   * @return {View}\r\n   */\r\n  static get view() {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(new View());\r\n    })\r\n    //return new View();\r\n  }\r\n\r\n  /**\r\n   * Get a pointer to user related metadata\r\n   * @return {User}\r\n   */\r\n  static get user() {\r\n    return new Promise((resolve, reject) => {\r\n      Helper.userDetailsHTTP().then((userDetails)=>{\r\n        Helper.userFinesHTTP().then((userFines) => {\r\n          Helper.userLoansHTTP().then((userLoans) => {\r\n              resolve(new User({details: userDetails, fines: userFines, loans: userLoans}));\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n}\r\n","import Components from './explore/components'\r\nimport Helper from './explore/helper'\r\n\r\n//this is proxy class\r\nexport default class Explore {\r\n  static get components() {\r\n    let c = new Components();\r\n    Helper.componentNames.forEach((selector) => {\r\n      c.add(selector);\r\n    })\r\n\r\n    return c;\r\n  }\r\n\r\n  static get ui() {\r\n    if (this._ui === undefined) {\r\n      console.error('This is a stub function call \"angular.reloadWithDebugInfo()\" to activate UI');\r\n    }\r\n    return this._ui;\r\n  }\r\n\r\n  static get helper() {\r\n    return Helper;\r\n  }\r\n}\r\n","var cssSelectorGenerator = new(require('../../vendor/css-selector-generator.js')).CssSelectorGenerator;\r\n\r\nimport Helper from './helper'\r\n\r\nclass Component {\r\n  constructor(element){\r\n    this.element = element;\r\n  }\r\n\r\n  blink(){\r\n    Helper.blink(this);\r\n  }\r\n\r\n  get cssPath(){\r\n    return cssSelectorGenerator.getSelector(this.element);\r\n  }\r\n\r\n  get name(){\r\n    return this.element.localName;\r\n  }\r\n\r\n  scope(){\r\n    if (Helper.isDebugEnabled()){\r\n      return angular.element(this.element).scope();\r\n    } else {\r\n      console.error('Please run \"angular.reloadWithDebugInfo()\" first');\r\n    }\r\n  }\r\n\r\n  ctrl(){\r\n    let c = angular.element(this.element).controller(this.name);\r\n    if (c) {\r\n      return c;\r\n    } else {\r\n      console.log('using alternative method to get controller');\r\n      let scope = this.scope();\r\n      if (scope) {\r\n        let scopeChild = scope.$$childTail;\r\n        if (Object.keys(scope).includes('$ctrl')) {\r\n            return scope.$ctrl\r\n        } else if(Object.keys(scope).includes('ctrl')) {\r\n            return scope.ctrl\r\n        } else if (scopeChild && Object.keys(scopeChild).includes('$ctrl')){\r\n            return scopeChild.$ctrl;\r\n        } else if (scopeChild && Object.keys(scopeChild).includes('ctrl')){\r\n            return scopeChild.ctrl;\r\n        } else {\r\n            console.error('No $ctrl defined');\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default class Components {\r\n  constructor(){\r\n\r\n      this._components = {};\r\n  }\r\n\r\n  add(selector) {\r\n    let elements = Helper.querySelectorAll(selector);\r\n    let elementsArray = this._components[selector] || [];\r\n\r\n    elements.forEach((element)=>{\r\n      elementsArray.push(new Component(element));\r\n    });\r\n\r\n    this._components[selector] = elementsArray;\r\n\r\n    return elementsArray;\r\n  }\r\n\r\n  get(selector) {\r\n    return this._components[selector] || null;\r\n  }\r\n\r\n  keys(){\r\n    return Object.keys(this._components);\r\n  }\r\n\r\n}\r\n","export default class Helper {\r\n    static isDebugEnabled() {\r\n        return window.name === 'NG_ENABLE_DEBUG_INFO!' || typeof(angular.element(document.querySelector('prm-logo')).scope()) != 'undefined' ? true : false;\r\n    }\r\n\r\n    static isPrimoAvailable() {\r\n        if ('undefined' !== typeof(window.angular)) {\r\n            if (document.querySelector('primo-explore') !== null) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static get componentNames() {\r\n        let tags = Array.from(document.getElementsByTagName('*'));\r\n        let componentNames = [];\r\n        for (let tag of tags) {\r\n            let tagName = tag.localName;\r\n            if (/^prm-/.test(tagName) || /^primo-/.test(tagName)) {\r\n                if (!componentNames.includes(tagName)) {\r\n                    componentNames.push(tagName);\r\n                }\r\n            }\r\n        }\r\n\r\n        componentNames = componentNames.sort().filter((e, i, a) => i === a.findIndex((e2) => e === e2));\r\n        return componentNames;\r\n    }\r\n\r\n    static querySelectorAll(selector) {\r\n        return Array.from(document.querySelectorAll(selector));\r\n    }\r\n\r\n    static injector() {\r\n      let c = Primo.explore.components.get('primo-explore');\r\n      if (c && c.length > 0) {\r\n          let primoExplore = angular.element(c[0].element);\r\n          let injector     = primoExplore.injector();\r\n          if (injector){\r\n            return injector;\r\n          }\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    static get http() {\r\n      let injector = this.injector();\r\n      if (injector) {\r\n        let h = injector.get('$http');\r\n        if (h) {\r\n          return h;\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n\r\n    static loadScript(scriptURL) {\r\n      if (window.angular) {\r\n          let appInjector = angular.injector(['ng','angularLoad']);\r\n          if (appInjector) {\r\n              let angularLoad = appInjector.get('angularLoad');\r\n              if (angularLoad) {\r\n                return angularLoad.loadScript(scriptURL);\r\n              }\r\n          }\r\n      }\r\n    }\r\n\r\n    static rootScope() {\r\n      let injector = this.injector();\r\n      if (injector) {\r\n          let rootScope    = injector.get('$rootScope');\r\n          if (rootScope) {\r\n            return rootScope;\r\n          }\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    static userSessionManagerService() {\r\n      let rootScope = this.rootScope();\r\n      if (rootScope) {\r\n        return rootScope.$$childHead.$ctrl.userSessionManagerService;\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    static jwtData() {\r\n      let uSMS = this.userSessionManagerService();\r\n      if (uSMS) {\r\n        let jwtData = uSMS.jwtUtilService.getDecodedToken() || {};\r\n        return jwtData;\r\n      }\r\n    }\r\n\r\n    static userDetails() {\r\n      return new Promise((resolve, reject) => {\r\n        this.userSessionManagerService().$localForage.getItem('userDetails').then(userDetails => resolve(userDetails));\r\n      });\r\n    }\r\n\r\n    static userDetailsHTTP() {\r\n      let viewCode = this.jwtData().viewId || window.appConfig['vid'];\r\n      return new Promise( (resolve,reject) => {\r\n        this.http.get(`/primo_library/libweb/webservices/rest/v1/usersettings?vid=${viewCode}`).then(userDetails => resolve(userDetails.data));\r\n      });\r\n    }\r\n\r\n    static userFinesHTTP() {\r\n      return new Promise((resolve, reject) => {\r\n        this.http.get('/primo_library/libweb/webservices/rest/v1/myaccount/fines').then(userFines => {\r\n          try {\r\n            let data = userFines.data;\r\n            if (data.status == 'ok') {\r\n                let fines = data.data.fines;\r\n                resolve(fines.fine);\r\n            } else {\r\n              console.log('No fines');\r\n              resolve([]);\r\n            }\r\n          }\r\n          catch(error){\r\n            resolve([]);\r\n          }\r\n        }\r\n        );\r\n      });\r\n    }\r\n\r\n    static userLoansHTTP() {\r\n      return new Promise((resolve, reject) => {\r\n        this.http.get('/primo_library/libweb/webservices/rest/v1/myaccount/loans').then(userLoans => {\r\n          try {\r\n            let data = userLoans.data;\r\n            if (data.status == 'ok') {\r\n                let loans = data.data.loans;\r\n                resolve(loans.loan);\r\n            } else {\r\n              console.log('No loans');\r\n              resolve([]);\r\n            }\r\n          }\r\n          catch(error){\r\n            resolve([]);\r\n          }\r\n        }\r\n        );\r\n      });\r\n    }\r\n\r\n    static blink(component, numberOfBlinks = 4) {\r\n        let intervalId = null;\r\n        let borderElement = null;\r\n        let index = Math.floor(Math.random() * (1000 - 1)) + 1;\r\n        let borderSelector = component.element.cssPath + index + 'Rect';\r\n\r\n        let createBorderElement = () => {\r\n            if (component && component.element) {\r\n                let elementRect = component.element.getBoundingClientRect();\r\n                let borderElement = document.createElement('div');\r\n                let index = Math.floor(Math.random() * (1000 - 1)) + 1;\r\n                borderElement.setAttribute('id', borderSelector);\r\n                borderElement.style.border = '3px solid red';\r\n                borderElement.style.position = 'absolute';\r\n                borderElement.style.top = elementRect.top + 'px';\r\n                borderElement.style.height = elementRect.height + 'px';\r\n                borderElement.style.width = elementRect.width + 'px';\r\n                borderElement.style.left = elementRect.left + 'px';\r\n                document.body.appendChild(borderElement);\r\n\r\n                return document.querySelector('#' + borderSelector);\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let removeBorderElement = () => {\r\n          if (borderElement) {\r\n            borderElement.remove();\r\n          }\r\n        }\r\n\r\n        let blinkBorderElement = (numberOfBlinks = 4) => {\r\n            window.clearInterval(intervalId);\r\n\r\n            if (numberOfBlinks < 0) {\r\n                removeBorderElement();\r\n            } else {\r\n                borderElement.style.display = ((numberOfBlinks % 2) == 0) ? 'none' : 'block';\r\n                numberOfBlinks--;\r\n                intervalId = window.setInterval(blinkBorderElement, 1000, numberOfBlinks);\r\n            }\r\n        }\r\n\r\n        borderElement = createBorderElement();\r\n        blinkBorderElement(numberOfBlinks);\r\n    }\r\n}\r\n","import Components from './explore/components'\r\nimport Helper from './explore/helper'\r\n\r\nexport default class Facets {\r\n    constructor(components) {\r\n      return this._facets(components);\r\n    }\r\n    _facets(components) {\r\n        try {\r\n            if (components) {\r\n                let c = components.get('prm-facet-after');\r\n                if (c && c.length > 0) {\r\n                    let ctrl = c[0].ctrl;\r\n                    return ctrl.facetService.results;\r\n                }\r\n            }\r\n        } catch (e) {\r\n          console.log('trying to get facets through the rootScope');\r\n          try {\r\n              return Helper.userSessionManagerService().searchStateService.resultObject.facets;\r\n          } catch(e) {\r\n              console.error('unable to retrieve facets');\r\n          }\r\n        }\r\n\r\n        return [];\r\n    }\r\n}\r\n","import Components from './explore/components'\r\nimport Helper from './explore/helper'\r\n\r\nexport default class Records {\r\n    constructor(components) {\r\n      return this._items(components);\r\n    }\r\n    _items(components) {\r\n        try {\r\n            if (components) {\r\n                let c = components.get('prm-search-result-list-after');\r\n                if (c && c.length > 0) {\r\n                    let ctrl = c[0].ctrl();\r\n                    if (ctrl) {\r\n                        return ctrl.itemlist;\r\n                    }\r\n                    throw \"try again\";\r\n                }\r\n            }\r\n        } catch (e) {\r\n          console.log('trying to get records through the rootScope');\r\n          try {\r\n              return Helper.userSessionManagerService().searchStateService.resultObject.data;\r\n          } catch(e) {\r\n              console.error('unable to retrieve items');\r\n          }\r\n        }\r\n\r\n        return [];\r\n    }\r\n}\r\n","import Helper from './explore/helper'\r\n\r\nexport default class User {\r\n  constructor(user = _skelUser) {\r\n    let uSms = Helper.userSessionManagerService();\r\n    let jwtData = Helper.jwtData();\r\n    let self = this;\r\n\r\n    return {\r\n        id: jwtData.user || '',\r\n        email: user.details.email || '',\r\n        name: jwtData.userName || 'Guest',\r\n        display_name: uSms.getUserNameForDisplay(),\r\n        isLoggedIn: () => uSms.getUserName().length > 0,\r\n        isOnCampus: () => jwtData.onCampus == \"true\" ? true : false,\r\n        fines: user.fines,\r\n        loans: user.loans\r\n      };\r\n  }\r\n\r\n  get _skelUser() {\r\n    return {\r\n      details: {},\r\n      fines: {},\r\n      loans: {}\r\n    }\r\n  }\r\n}\r\n","import Helper from './explore/helper'\r\n\r\nexport default class View {\r\n    constructor() {\r\n      let uSms = Helper.userSessionManagerService();\r\n      let jwtData = Helper.jwtData();\r\n\r\n      return {\r\n        code: jwtData.viewId || window.appConfig['vid'],\r\n        institution: {\r\n            code: jwtData.viewInstitutionCode,\r\n            name: window.appConfig['primo-view']['attributes-map'].institution\r\n        },\r\n        interfaceLanguage: uSms.getUserLanguage() || window.appConfig['primo-view']['attributes-map'].interfaceLanguage,\r\n        ip: {\r\n          address: jwtData.ip\r\n        }\r\n      }\r\n    }\r\n}\r\n","(function() {\r\n  var CssSelectorGenerator, root,\r\n    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\r\n\r\n  CssSelectorGenerator = (function() {\r\n    CssSelectorGenerator.prototype.default_options = {\r\n      selectors: ['id', 'class', 'tag', 'nthchild']\r\n    };\r\n\r\n    function CssSelectorGenerator(options) {\r\n      if (options == null) {\r\n        options = {};\r\n      }\r\n      this.options = {};\r\n      this.setOptions(this.default_options);\r\n      this.setOptions(options);\r\n    }\r\n\r\n    CssSelectorGenerator.prototype.setOptions = function(options) {\r\n      var key, results, val;\r\n      if (options == null) {\r\n        options = {};\r\n      }\r\n      results = [];\r\n      for (key in options) {\r\n        val = options[key];\r\n        if (this.default_options.hasOwnProperty(key)) {\r\n          results.push(this.options[key] = val);\r\n        } else {\r\n          results.push(void 0);\r\n        }\r\n      }\r\n      return results;\r\n    };\r\n\r\n    CssSelectorGenerator.prototype.isElement = function(element) {\r\n      return !!((element != null ? element.nodeType : void 0) === 1);\r\n    };\r\n\r\n    CssSelectorGenerator.prototype.getParents = function(element) {\r\n      var current_element, result;\r\n      result = [];\r\n      if (this.isElement(element)) {\r\n        current_element = element;\r\n        while (this.isElement(current_element)) {\r\n          result.push(current_element);\r\n          current_element = current_element.parentNode;\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n\r\n    CssSelectorGenerator.prototype.getTagSelector = function(element) {\r\n      return this.sanitizeItem(element.tagName.toLowerCase());\r\n    };\r\n\r\n    CssSelectorGenerator.prototype.sanitizeItem = function(item) {\r\n      var characters;\r\n      characters = (item.split('')).map(function(character) {\r\n        if (character === ':') {\r\n          return \"\\\\\" + (':'.charCodeAt(0).toString(16).toUpperCase()) + \" \";\r\n        } else if (/[ !\"#$%&'()*+,.\\/;<=>?@\\[\\\\\\]^`{|}~]/.test(character)) {\r\n          return \"\\\\\" + character;\r\n        } else {\r\n          return escape(character).replace(/\\%/g, '\\\\');\r\n        }\r\n      });\r\n      return characters.join('');\r\n    };\r\n\r\n    CssSelectorGenerator.prototype.getIdSelector = function(element) {\r\n      var id, sanitized_id;\r\n      id = element.getAttribute('id');\r\n      if ((id != null) && (id !== '') && !(/\\s/.exec(id)) && !(/^\\d/.exec(id))) {\r\n        sanitized_id = \"#\" + (this.sanitizeItem(id));\r\n        if (element.ownerDocument.querySelectorAll(sanitized_id).length === 1) {\r\n          return sanitized_id;\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n\r\n    CssSelectorGenerator.prototype.getClassSelectors = function(element) {\r\n      var class_string, item, result;\r\n      result = [];\r\n      class_string = element.getAttribute('class');\r\n      if (class_string != null) {\r\n        class_string = class_string.replace(/\\s+/g, ' ');\r\n        class_string = class_string.replace(/^\\s|\\s$/g, '');\r\n        if (class_string !== '') {\r\n          result = (function() {\r\n            var k, len, ref, results;\r\n            ref = class_string.split(/\\s+/);\r\n            results = [];\r\n            for (k = 0, len = ref.length; k < len; k++) {\r\n              item = ref[k];\r\n              results.push(\".\" + (this.sanitizeItem(item)));\r\n            }\r\n            return results;\r\n          }).call(this);\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n\r\n    CssSelectorGenerator.prototype.getAttributeSelectors = function(element) {\r\n      var attribute, blacklist, k, len, ref, ref1, result;\r\n      result = [];\r\n      blacklist = ['id', 'class'];\r\n      ref = element.attributes;\r\n      for (k = 0, len = ref.length; k < len; k++) {\r\n        attribute = ref[k];\r\n        if (ref1 = attribute.nodeName, indexOf.call(blacklist, ref1) < 0) {\r\n          result.push(\"[\" + attribute.nodeName + \"=\" + attribute.nodeValue + \"]\");\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n\r\n    CssSelectorGenerator.prototype.getNthChildSelector = function(element) {\r\n      var counter, k, len, parent_element, sibling, siblings;\r\n      parent_element = element.parentNode;\r\n      if (parent_element != null) {\r\n        counter = 0;\r\n        siblings = parent_element.childNodes;\r\n        for (k = 0, len = siblings.length; k < len; k++) {\r\n          sibling = siblings[k];\r\n          if (this.isElement(sibling)) {\r\n            counter++;\r\n            if (sibling === element) {\r\n              return \":nth-child(\" + counter + \")\";\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n\r\n    CssSelectorGenerator.prototype.testSelector = function(element, selector) {\r\n      var is_unique, result;\r\n      is_unique = false;\r\n      if ((selector != null) && selector !== '') {\r\n        result = element.ownerDocument.querySelectorAll(selector);\r\n        if (result.length === 1 && result[0] === element) {\r\n          is_unique = true;\r\n        }\r\n      }\r\n      return is_unique;\r\n    };\r\n\r\n    CssSelectorGenerator.prototype.getAllSelectors = function(element) {\r\n      var result;\r\n      result = {\r\n        t: null,\r\n        i: null,\r\n        c: null,\r\n        a: null,\r\n        n: null\r\n      };\r\n      if (indexOf.call(this.options.selectors, 'tag') >= 0) {\r\n        result.t = this.getTagSelector(element);\r\n      }\r\n      if (indexOf.call(this.options.selectors, 'id') >= 0) {\r\n        result.i = this.getIdSelector(element);\r\n      }\r\n      if (indexOf.call(this.options.selectors, 'class') >= 0) {\r\n        result.c = this.getClassSelectors(element);\r\n      }\r\n      if (indexOf.call(this.options.selectors, 'attribute') >= 0) {\r\n        result.a = this.getAttributeSelectors(element);\r\n      }\r\n      if (indexOf.call(this.options.selectors, 'nthchild') >= 0) {\r\n        result.n = this.getNthChildSelector(element);\r\n      }\r\n      return result;\r\n    };\r\n\r\n    CssSelectorGenerator.prototype.testUniqueness = function(element, selector) {\r\n      var found_elements, parent;\r\n      parent = element.parentNode;\r\n      found_elements = parent.querySelectorAll(selector);\r\n      return found_elements.length === 1 && found_elements[0] === element;\r\n    };\r\n\r\n    CssSelectorGenerator.prototype.testCombinations = function(element, items, tag) {\r\n      var item, k, l, len, len1, ref, ref1;\r\n      ref = this.getCombinations(items);\r\n      for (k = 0, len = ref.length; k < len; k++) {\r\n        item = ref[k];\r\n        if (this.testUniqueness(element, item)) {\r\n          return item;\r\n        }\r\n      }\r\n      if (tag != null) {\r\n        ref1 = items.map(function(item) {\r\n          return tag + item;\r\n        });\r\n        for (l = 0, len1 = ref1.length; l < len1; l++) {\r\n          item = ref1[l];\r\n          if (this.testUniqueness(element, item)) {\r\n            return item;\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n\r\n    CssSelectorGenerator.prototype.getUniqueSelector = function(element) {\r\n      var found_selector, k, len, ref, selector_type, selectors;\r\n      selectors = this.getAllSelectors(element);\r\n      ref = this.options.selectors;\r\n      for (k = 0, len = ref.length; k < len; k++) {\r\n        selector_type = ref[k];\r\n        switch (selector_type) {\r\n          case 'id':\r\n            if (selectors.i != null) {\r\n              return selectors.i;\r\n            }\r\n            break;\r\n          case 'tag':\r\n            if (selectors.t != null) {\r\n              if (this.testUniqueness(element, selectors.t)) {\r\n                return selectors.t;\r\n              }\r\n            }\r\n            break;\r\n          case 'class':\r\n            if ((selectors.c != null) && selectors.c.length !== 0) {\r\n              found_selector = this.testCombinations(element, selectors.c, selectors.t);\r\n              if (found_selector) {\r\n                return found_selector;\r\n              }\r\n            }\r\n            break;\r\n          case 'attribute':\r\n            if ((selectors.a != null) && selectors.a.length !== 0) {\r\n              found_selector = this.testCombinations(element, selectors.a, selectors.t);\r\n              if (found_selector) {\r\n                return found_selector;\r\n              }\r\n            }\r\n            break;\r\n          case 'nthchild':\r\n            if (selectors.n != null) {\r\n              return selectors.n;\r\n            }\r\n        }\r\n      }\r\n      return '*';\r\n    };\r\n\r\n    CssSelectorGenerator.prototype.getSelector = function(element) {\r\n      var all_selectors, item, k, l, len, len1, parents, result, selector, selectors;\r\n      all_selectors = [];\r\n      parents = this.getParents(element);\r\n      for (k = 0, len = parents.length; k < len; k++) {\r\n        item = parents[k];\r\n        selector = this.getUniqueSelector(item);\r\n        if (selector != null) {\r\n          all_selectors.push(selector);\r\n        }\r\n      }\r\n      selectors = [];\r\n      for (l = 0, len1 = all_selectors.length; l < len1; l++) {\r\n        item = all_selectors[l];\r\n        selectors.unshift(item);\r\n        result = selectors.join(' > ');\r\n        if (this.testSelector(element, result)) {\r\n          return result;\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n\r\n    CssSelectorGenerator.prototype.getCombinations = function(items) {\r\n      var i, j, k, l, ref, ref1, result;\r\n      if (items == null) {\r\n        items = [];\r\n      }\r\n      result = [[]];\r\n      for (i = k = 0, ref = items.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\r\n        for (j = l = 0, ref1 = result.length - 1; 0 <= ref1 ? l <= ref1 : l >= ref1; j = 0 <= ref1 ? ++l : --l) {\r\n          result.push(result[j].concat(items[i]));\r\n        }\r\n      }\r\n      result.shift();\r\n      result = result.sort(function(a, b) {\r\n        return a.length - b.length;\r\n      });\r\n      result = result.map(function(item) {\r\n        return item.join('');\r\n      });\r\n      return result;\r\n    };\r\n\r\n    return CssSelectorGenerator;\r\n\r\n  })();\r\n\r\n  if (typeof define !== \"undefined\" && define !== null ? define.amd : void 0) {\r\n    define([], function() {\r\n      return CssSelectorGenerator;\r\n    });\r\n  } else {\r\n    root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\r\n    root.CssSelectorGenerator = CssSelectorGenerator;\r\n  }\r\n\r\n}).call(this);\r\n","/*\r\n  Replace templates.\r\n\r\n  Replace the default primo templates http://localhost:8003/primo-explore/lib/templates.js\r\n  with custom templates\r\n\r\n  KULeuven/LIBIS (c) 2018\r\n  Tom Vanmechelen\r\n*/\r\nimport './utils'\r\n\r\n/* import your templates */\r\nimport prmSearchResultAvailabilityLineHTML from '../html/templates/prm-search-result-availability-line.html'\r\n\r\nexport default class Templates {\r\n    static get all() {\r\n        /*\r\n          id = templateId in the templateCache\r\n          template = the imported tempalte\r\n          enabled = true/false should the component be created\r\n          enableInView = regex to define in which views the template has to be replaced.\r\n\r\n          ex. {id: 'components/search/topbar/userArea/user-area.html', template: userAreaHTML, enabled: true, enableInView: '.*'}\r\n          results in:\r\n            $templateCache.put('components/search/topbar/userArea/user-area.html',userAreaHTML);\r\n        */\r\n        return [      \r\n            {\r\n                id: 'components/search/searchResult/searchResultAvailability/searchResultAvailabilityLine.html',\r\n                template: prmSearchResultAvailabilityLineHTML,\r\n                enabled: true,\r\n                enableInView: 'REGIONAL'\r\n            }\r\n        ].filter((template) => (template.enabled && new RegExp(template.enableInView).test(window.appConfig.vid)));\r\n    }\r\n}\r\n","/*\r\n  General\r\n\r\n  KULeuven/LIBIS (c) 2017\r\n  Mehmet Celik\r\n*/\r\nString.prototype.toCamelCase = function () {\r\n  return this.split('-').map((d, i, a) => i > 0 ? d.charAt(0).toUpperCase() + d.slice(1) : d).join('');\r\n}\r\n\r\n/*\r\nangular.module('googleAnalytics', []);\r\nangular.module('googleAnalytics').run(function ($rootScope, $interval, analyticsOptions) {\r\n\tif(analyticsOptions.hasOwnProperty(\"enabled\") && analyticsOptions.enabled) {\r\n\t\tif(analyticsOptions.hasOwnProperty(\"siteId\") && analyticsOptions.siteId != '') {\r\n\t\t\t\r\n            (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\r\n            new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\r\n            j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\r\n            'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\r\n            })(window,document,'script','dataLayer',analyticsOptions.siteId);\r\n        }\r\n\r\n        const inlineScriptTag = document.createElement('noscript');\r\n        inlineScriptTag.type = 'text/javascript';\r\n\r\n        const inlineCode = '<noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WR259MX\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>';\r\n\r\n        // Methods of adding inner text sometimes don't work across browsers.\r\n        try {\r\n          inlineScriptTag.appendChild(document.createTextNode(inlineCode));\r\n        } catch (e) {\r\n          inlineScriptTag.text = inlineCode;\r\n        }\r\n\r\n        document.querySelector('body').appendChild(inlineScriptTag);\t\t\r\n\t}\r\n});\r\nangular.module('googleAnalytics').value('analyticsOptions', {\r\n\tenabled: false,\r\n\tsiteId: '',\r\n\tdefaultTitle: ''\r\n});\r\n*/\r\n\r\n//intercept api calls for database search and change to KUL (only regional views)\r\n  /*\r\nvar reg_views = [\"KULeuven_TMOREM\", \"KULeuven_TMOREK\", \"KULeuven_UCLL\", \"KULeuven_LUCA\", \"KULeuven_ODISEE\"];\r\nif (reg_views.includes(window.appConfig.vid)) {\r\n  let app = angular.module('viewCustom', [])\r\n    .factory('httpCallInterceptor', [() => {\r\n      var httpCallInterceptor = {\r\n        request: function(config){\r\n          if (config.url.includes('pnxs') && !config.url.includes('delivery') && config.params) {\r\n            //console.log(config);\r\n\r\n            if(config.params.databases){\r\n              config.params.inst = 'KUL';\r\n              config.params.vid = 'KULeuven';\r\n            }\r\n\r\n            return config;\r\n          }\r\n          return config;\r\n        }\r\n      }\r\n      return httpCallInterceptor;\r\n    }])\r\n    .config(['$httpProvider', ($httpProvider) => {\r\n      $httpProvider.interceptors.push('httpCallInterceptor');\r\n    }]);\r\n}\r\n*/\r\n/*\r\nangular.element.prototype.closestClass = function (className) {\r\n  return (function closest(element, className) {\r\n    if (element[0].nodeName === 'HTML') {\r\n      return null;\r\n    } else if (element.hasClass(className)) {\r\n      return element;\r\n    } else {\r\n      return closest(element.parent(), className);\r\n    }\r\n  })(this, className);\r\n};\r\n\r\nangular.element.prototype.closestNode = function (nodeName) {\r\n  return (function closest(element, nodeName) {\r\n    if (element[0].nodeName === 'HTML') {\r\n      return null;\r\n    } else if (element[0].nodeName == nodeName.toUpperCase()) {\r\n      return element;\r\n    } else {\r\n      return closest(element.parent(), nodeName);\r\n    }\r\n  })(this, nodeName);\r\n};\r\n*/\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}